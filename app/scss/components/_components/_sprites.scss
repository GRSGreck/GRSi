/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-digg-01-32: (104px, 256px, -104px, -256px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Digg-01-32', );
$s-ebay-32: (52px, 204px, -52px, -204px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Ebay-32', );
$s-facebook-32: (52px, 256px, -52px, -256px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Facebook-32', );
$s-google-32: (0px, 256px, 0px, -256px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Google-32', );
$s-linked-in-32: (272px, 156px, -272px, -156px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-LinkedIn-32', );
$s-pinterest-32: (272px, 104px, -272px, -104px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Pinterest-32', );
$s-r-s-s-32: (0px, 204px, 0px, -204px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-RSS-32', );
$s-twitter-bird-32: (272px, 0px, -272px, 0px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Twitter-Bird-32', );
$s-vimeo-32: (208px, 204px, -208px, -204px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Vimeo-32', );
$s-word-press-32: (156px, 204px, -156px, -204px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-WordPress-32', );
$s-yahoo-01-32: (104px, 204px, -104px, -204px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-Yahoo-01-32', );
$s-you-tube1-32: (272px, 52px, -272px, -52px, 32px, 32px, 304px, 288px, '../img/sprites.png', 's-YouTube1-32', );
$s-digg-01-48: (0px, 0px, 0px, 0px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Digg-01-48', );
$s-ebay-48: (204px, 136px, -204px, -136px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Ebay-48', );
$s-facebook-48: (204px, 68px, -204px, -68px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Facebook-48', );
$s-google-48: (204px, 0px, -204px, 0px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Google-48', );
$s-linked-in-48: (136px, 136px, -136px, -136px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-LinkedIn-48', );
$s-pinterest-48: (68px, 136px, -68px, -136px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Pinterest-48', );
$s-r-s-s-48: (0px, 136px, 0px, -136px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-RSS-48', );
$s-twitter-bird-48: (136px, 68px, -136px, -68px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Twitter-Bird-48', );
$s-vimeo-48: (136px, 0px, -136px, 0px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Vimeo-48', );
$s-word-press-48: (68px, 68px, -68px, -68px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-WordPress-48', );
$s-yahoo-01-48: (0px, 68px, 0px, -68px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-Yahoo-01-48', );
$s-you-tube1-48: (68px, 0px, -68px, 0px, 48px, 48px, 304px, 288px, '../img/sprites.png', 's-YouTube1-48', );
$spritesheet-sprites: ($s-digg-01-32, $s-ebay-32, $s-facebook-32, $s-google-32, $s-linked-in-32, $s-pinterest-32, $s-r-s-s-32, $s-twitter-bird-32, $s-vimeo-32, $s-word-press-32, $s-yahoo-01-32, $s-you-tube1-32, $s-digg-01-48, $s-ebay-48, $s-facebook-48, $s-google-48, $s-linked-in-48, $s-pinterest-48, $s-r-s-s-48, $s-twitter-bird-48, $s-vimeo-48, $s-word-press-48, $s-yahoo-01-48, $s-you-tube1-48, );
$spritesheet: (304px, 288px, '../img/sprites.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
